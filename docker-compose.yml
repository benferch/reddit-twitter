version: '3.4'

services:
  db:
    container_name: 'bot_db'
    hostname: 'db'
    image: 'mongo:4.4.2'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - 27017:27017
    env_file:
      - .env
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongo/data:/data/db
  backend:
    container_name: 'bot_backend'
    hostname: 'backend'
    image: 'node:14'
    command: 'yarn workspace backend start'
    working_dir: /home/node/backend
    depends_on:
      - db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      IMGUR_CLIENT_ID: ${IMGUR_CLIENT_ID}
      IMGUR_CLIENT_SECRET: ${IMGUR_CLIENT_SECRET}
      IMGUR_REFRESH_TOKEN: ${IMGUR_REFRESH_TOKEN}
      IMGUR_ACCESS_TOKEN: ${IMGUR_ACCESS_TOKEN}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_MAIL: ${SENTRY_MAIL}
      SENTRY_ENV: ${SENTRY_ENV}
    ports:
      - 8081:8081
    env_file:
      - .env
    volumes:
      - .:/home/node/backend

  bot:
    container_name: 'bot_bot'
    hostname: 'bot'
    image: 'node:14'
    command: 'yarn workspace bot start'
    working_dir: /home/node/bot
    depends_on:
      - backend
    restart: always
    environment:
      CONSUMER_KEY: ${CONSUMER_KEY}
      CONSUMER_SECRET: ${CONSUMER_SECRET}
      ACCESS_TOKEN: ${ACCESS_TOKEN}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_MAIL: ${SENTRY_MAIL}
      SENTRY_ENV: ${SENTRY_ENV}
    env_file:
      - .env
    ports:
      - 8080:8080
    volumes:
      - .:/home/node/bot

volumes:
  mongo-container:
